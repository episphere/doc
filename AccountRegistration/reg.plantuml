@startuml
skinparam shadowing false
actor Patient as A
participant "Connect Registration App" as CA
participant "Connect API" as API
participant "Health Care Partner (HCP)" as HCP
participant "Authentication service" as AS

A ->CA: index.html
A <-- CA: web page
A ->CA: join()
CA -> A:  loginPlease()
A --> AS: login()
AS --> CA: login
  note right
    At this point
    I have a google token.
    If I have already seen
    the google token with
    a valid pin/token, we
    have a returning user.
  end note

alt No Token & New User
  CA -> A: HealthCareProvider?
  note left
    The user may have a 
    pin. Check the HCP
  end note

  A --> CA: response

  alt HCP sends PINs
    CA -> A: requestPIN
    A --> CA: PIN
    alt valid pin
    CA -> API: requestToken(pin)
    CA <-- API: token
    CA -> API: associateTokenWithGoogleToken()
    CA <-- API: return
    note left
        Now is a "returning User" ....
    end note
    
    else !valid pin
       CA -> HCP: divertUser(pin,token)
       destroy HCP
    end
    
  else HCP does not send pins
    CA -> HCP: divertUserNoPINorToken()
    destroy HCP
  end
else Have Token & New User
  CA -> API: associateTokenWithGoogleToken
  CA <-- API: return
  note left
      Now is a "returning User" ....
  end note
end

alt email not verified
  CA --> A: email verification link
  note left #f0262d
    I dont know if this
    step is required.
  end note

  A --> AS: verify email
end

alt not consented
  CA --> A: consentform
  A -> CA: consent
  CA -> API: consent()
  CA <-- API: return
end


CA -> A: updateProfile
A --> CA: updateProfile
CA --> API: updateProfile
API --> CA: return

alt Eligiblity not confirmed
  alt Not Waiting
    CA --> HCP: CheckEligibilty
    HCP --> CA: return
    CA -> A:  ThankYouComeBackLater
  ...HCP confirms study participant eligibility ...
  else Waiting for Eligibility
    CA -> A:  ThankYouComeBackLater
  end
  HCP -> API: confirmParticipant()
end

alt Eligiblity Confirmed
  CA --> A: YouAreRegistered
else Confirmed Not Eligible
  CA --> A: SorryNotEligible
end

@enduml
